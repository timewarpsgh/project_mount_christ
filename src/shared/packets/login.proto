// new account
message NewAccount {
    required string account = 1;
    required string password = 2;
}

message NewAccountRes {
    enum NewAccountResType {
        OK = 0;
        ACCOUNT_EXISTS = 1;
    }

    required NewAccountResType new_account_res_type = 1;
}


// login
message Login {
    required string account = 1;
    required string password = 2;
}

message LoginRes {
    enum LoginResType {
        OK = 0;
        WRONG_PASSWORD_OR_ACCOUNT = 1;
    }

    required LoginResType login_res_type = 1;
}


// get worlds
message GetWorlds {
}

message World {
    required int32 id = 1;
    required string name = 2;
}

message GetWorldsRes {


    repeated World worlds = 1;
}


// get roles in world
message GetRolesInWorld {
    required int32 world_id = 1;
}

message Role {
    required int32 id = 1;
    required string name = 2;
}

message GetRolesInWorldRes {
    repeated Role roles = 1;
}


// new role
message NewRole {
    required string name = 1;
    required int32 world_id = 2;
}

message NewRoleRes {
    enum NewRoleResType {
        OK = 0;
        NAME_EXISTS = 1;
    }

    required NewRoleResType new_role_res_type = 1;
}


// enter world
message EnterWorld {
    required int32 role_id = 1;
}


message Ship {
  required int32 id = 1;
  required int32 role_id = 2;

  required string name = 3;
  required int32 ship_template_id = 4;

  required int32 material_type = 5;

  required int32 now_durability = 6;
  required int32 max_durability = 7;

  required int32 tacking = 8;
  required int32 power = 9;

  required int32 capacity = 10;

  required int32 now_crew = 11;
  required int32 min_crew = 12;
  required int32 max_crew = 13;

  required int32 now_guns = 14;
  required int32 type_of_guns = 15;
  required int32 max_guns = 16;

  required int32 water = 17;
  required int32 food = 18;
  required int32 material = 19;
  required int32 cannon = 20;

  required int32 cargo_cnt = 21;
  required int32 cargo_id = 22;

  optional int32 captain = 23;
  optional int32 accountant = 24;
  optional int32 first_mate = 25;
  optional int32 chief_navigator = 26;

  optional float x = 27;
  optional float y = 28;

}

message Mate {
  required int32 id = 1;
  required int32 role_id = 2;

  required string name = 3;
  required string img_id = 4;
  required string nation = 5;

  optional int32 lv = 6;
  optional int32 points = 7;
  optional int32 duty_type = 8;
  optional int32 ship_id = 9;

  optional int32 leadership = 10;

  required int32 navigation = 11;
  required int32 accounting = 12;
  required int32 battle = 13;

  required int32 talent_in_navigation = 14;
  required int32 talent_in_accounting = 15;
  required int32 talent_in_battle = 16;

  required int32 lv_in_nav = 17;
  required int32 lv_in_acc = 18;
  required int32 lv_in_bat = 19;

  required int32 xp_in_nav = 20;
  required int32 xp_in_acc = 21;
  required int32 xp_in_bat = 22;
}


message RoleEntered {
    required int32 id = 1;
    required string name = 2;
    required int32 map_id = 3;
    required int32 x = 4;
    required int32 y = 5;
    required int32 dir = 6;
    required int32 money = 7;

    repeated Ship ships = 8;
    repeated Mate mates = 9;
    optional string discovery_ids_json_str = 10;
    repeated int32 seen_grids_64_int32s = 11;
}

message EnterWorldRes {
    required bool is_ok = 1;
    optional RoleEntered role_entered = 2;
}

// role appeared from server
message RoleAppeared {
    required int32 id = 1;
    required string name = 2;
    required int32 x = 3;
    required int32 y = 4;

}

// role disappeared from server
message RoleDisappeared {
    required int32 id = 1;
}

// get available cargos
message GetAvailableCargos {
}

message AvailableCargo {
    required int32 id = 1;
    required string name = 2;
    required int32 price = 3;
}

message GetAvailableCargosRes {
    repeated AvailableCargo available_cargos = 1;
}


// move
enum DirType {
    N = 0;
    NE = 1;
    E = 2;
    SE = 3;
    S = 4;
    SW = 5;
    W = 6;
    NW = 7;
}

message Move {
    required DirType dir_type = 1;
}

message StartMoving {
    required DirType dir_type = 1;
    required int32 src_x = 2;
    required int32 src_y = 3;
}

message StartedMoving {
    required int32 id = 1;
    required int32 src_x = 2;
    required int32 src_y = 3;
    required DirType dir = 4;
    required int32 speed = 5;
}


message StopMoving {
    required int32 x = 1;
    required int32 y = 2;
    required DirType dir = 3;
}

message StoppedMoving {
    required int32 id = 1;
    required int32 src_x = 2;
    required int32 src_y = 3;
    required DirType dir = 4;
}

// role moved
message RoleMoved {
    required int32 id = 1;
    required int32 x = 2;
    required int32 y = 3;
    required DirType dir_type = 4;
}

// disconnect from client
message Disconnect {
}

// buy cargo
message BuyCargo {
    required int32 cargo_id = 1;
    required int32 cnt = 2;
    required int32 ship_id = 3;
}

message MoneyChanged {
    required int32 money = 1;
}

message ShipCargoChanged {
    required int32 cargo_id = 1;
    required int32 cnt = 2;
    required int32 ship_id = 3;
}

//sell cargo
message GetCargoCntAndSellPrice {
    required int32 ship_id = 1;
}

message CargoToSellInShip {
    required int32 cargo_id = 1;
    required string cargo_name = 2;
    required int32 cnt = 3;
    required int32 sell_price = 4;
    required int32 ship_id = 5;
}

message SellCargoInShip {
    required int32 ship_id = 1;
    required int32 cargo_id = 2;
    required int32 cnt = 3;
}

message PopSomeMenus {
    required int32 cnt = 1;
}

// chat
enum ChatType {
    SAY = 0;
    WHISPER = 1;
    PARTY = 2;
    NATION = 3;
    GLOBAL = 4;
    SYSTEM = 5;
}

message Chat {
    required ChatType chat_type = 1;
    required string text = 2;
    optional string whisper_target_name = 3;
}

message GotChat {
    optional string origin_name = 1;
    required ChatType chat_type = 2;
    required string text = 3;
    optional string whisper_target_name = 4;
}

// discover
message Discover {
    required int32 village_id = 1;
}

message Discovered {
    required int32 village_id = 1;
}

// sail
message Sail {
}

message MapChanged {
    required int32 role_id = 1;
    required int32 map_id = 2;
    required int32 x = 3;
    required int32 y = 4;
}

// enter port
message EnterPort {
    required int32 id = 1;
}

// opened grid from server
message OpenedGrid {
    required int32 grid_x = 1;
    required int32 grid_y = 2;
}

// fight npc
message FightNpc {
    required int32 npc_id = 1;
}

message EnteredBattleWithNpc {
    required int32 npc_id = 1;
    repeated Ship ships = 2;
}

// escape battle
message EscapeNpcBattle {
    required int32 npc_id = 1;
}

message EscapedNpcBattle {
}

// win npc
message YouWonNpcBattle {
    repeated Ship ships = 1;
}

// sell ship
message SellShip {
    required int32 id = 1;
}

message ShipRemoved{
    required int32 id = 1;
}

// buy ship
message GetShipsToBuy {
}

message ShipToBuy {
    required int32 template_id = 1;
    required int32 price = 2;
}

message ShipsToBuy {
    repeated ShipToBuy ships_to_buy = 1;
}

message BuyShip{
    required int32 template_id = 1;
}

message GotNewShip{
    required Ship ship = 1;
}

// fight role
message FightRole {
    required int32 role_id = 1;
}


message EnteredBattleWithRole {
    required int32 role_id = 1;
    repeated Ship ships = 2;
}

// escape role battle
message EscapeRoleBattle {
}

message EscapedRoleBattle {
}

// battle timer
message BattleTimerStarted {
    required int32 battle_timer = 1;
    required int32 role_id = 2;
}

// AllShipsAttack
message AllShipsAttack {
}

enum AttackMethodType {
    SHOOT = 0;
    ENGAGE = 1;
    FLEE = 2;
    HOLD = 3;
}

message ShipAttacked{
    required int32 src_id = 1;
    required int32 dst_id = 2;
    required AttackMethodType attack_method_type = 3;
    optional int32 src_damage = 4;
    required int32 dst_damage = 5;
}

message ShipMoved{
    required int32 id = 1;
    required float x = 2;
    required float y = 3;
    required DirType dir = 4;
    required int32 steps_left = 5;
}

// set all ships target
message SetAllShipsTarget{
    required int32 ship_id = 1;
}
message AllShipsTargetSet{
    required int32 ship_id = 1;
}

// SetAllShipsStrategy
message SetAllShipsStrategy{
    required AttackMethodType attack_method_type = 1;
}

message AllShipsStrategySet{
    required AttackMethodType attack_method_type = 1;
}

// set ship target
message SetShipTarget{
    required int32 ship_id = 1;
    required int32 target_ship_id = 2;
}

message SetShipStrategy{
    required int32 ship_id = 1;
    required AttackMethodType attack_method_type = 2;
}

enum BattleDirType {
    LEFT = 0;
    RIGHT = 1;
    CUR = 2;
}

message FlagShipMove{
    required BattleDirType battle_dir_type = 1;
}

message FlagShipAttack{
    required AttackMethodType attack_method_type = 1;
    optional int32 target_ship_id = 2;
}

// view fleet
message ViewFleet{
    required int32 role_id = 1;
}

message FleetInfo{
    repeated int32 ships_template_ids = 1;
}

// GetMateInPort
message GetMateInPort{
}

message MateInPort{
    required int32 mate_template_id = 1;
}

// HireMate
message HireMate{
    required int32 mate_template_id = 1;
}

message HireMateRes{
    required bool is_ok = 1;
    optional Mate mate = 2;
}

// fire mate
message FireMate{
    required int32 mate_id = 1;
}

message MateFired{
    required int32 mate_id = 1;
}

//assign duty
enum DutyType {
    CAPTAIN = 1;
    CHIEF_NAVIGATOR = 2;
    ACCOUNTANT = 3;
    FIRST_MATE = 4;
}

message AssignDuty{
    required int32 mate_id = 1;
    required int32 ship_id = 2;
    required DutyType duty_type = 3;
}

message DutyAssigned{
    required int32 mate_id = 1;
    required int32 ship_id = 2;
    required DutyType duty_type = 3;
}